#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamerposter
\begin_preamble
% You can select your theme here. Any beamer theme without a sidebar should work:
\usetheme{Rochester}
% Note, however, that only dedicated beamerposter themes also generate
% a suitable poster title automatically (we do this manually, see the notes
% in the document). 
% Dedicated beamerposter themes are available at 
% http://www-i6.informatik.rwth-aachen.de/~dreuw/latexbeamerposter.php

% Here you can set the options (note that the example content is made for the given setup. 
% With different orientation or poster size, the content probably won't fit on the poster):
\PassOptionsToPackage{%
   orientation=landscape, % possible: portrait, landscape
    size=a4,% possible: a0b, a0, a1, a2, a3, a4, custom (with width=<val>,height=<val>)
    scale=1.625,% scaling of fonts
    debug% give verbose warnings and error messages
}{beamerposter}

% This produces a grid which might be useful when positioning things
%\beamertemplategridbackground[0.5cm]
%\setbeamertemplate{background canvas}[vertical shading][bottom=gray,top=white]
\end_preamble
\options final
\use_default_options false
\begin_modules
multicol
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Distributed Shared Memory
\end_layout

\begin_layout Frame

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset VSpace -1.25cm
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

% Output title
\end_layout

\begin_layout Plain Layout

{
\backslash
LARGE
\backslash
textcolor{white}{
\backslash
textbf{
\backslash
inserttitle}}}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace -0.75cm
\end_inset


\end_layout

\begin_layout Columns
\begin_inset Argument 1
status open

\begin_layout Plain Layout
t, totalwidth=
\begin_inset ERT
status open

\begin_layout Plain Layout

1
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Column
.3
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bold
status open

\begin_layout Plain Layout

\size large
Distributed shared memory
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
An abstraction which provides the impression of a logical single large monolithi
c memory.
\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Columns

\series bold
Advantages.
\end_layout

\begin_deeper
\begin_layout Itemize
No need for programmers to worry about communication primitives.
\end_layout

\begin_layout Itemize
Advantage of a large single address space (e.g.
 passing by reference).
\end_layout

\begin_layout Itemize
System can exploit locality of reference (transfer blocks of data).
\end_layout

\begin_layout Itemize
Often cheaper than dedicated systems (simple API, off-the-shelf hardware).
\end_layout

\begin_layout Itemize
Easily scalable (no bottleneck due to single memory access bus).
\end_layout

\begin_layout Itemize
Program portability due to common API.
\end_layout

\end_deeper
\begin_layout Columns

\series bold
Disadvantages.
\end_layout

\begin_deeper
\begin_layout Itemize
Programmers must understand consistency models.
\end_layout

\begin_layout Itemize
Loss in flexibility, and increased overhead.
 Cannot be more efficient that asynchronous message passing implementations.
\end_layout

\end_deeper
\begin_layout Columns

\series bold
Implementation issues.
\end_layout

\begin_deeper
\begin_layout Itemize
Data consistency and semantics for concurrent access.
\end_layout

\begin_layout Itemize
Degree of replication, where and what to replicate.
\end_layout

\begin_layout Itemize
Reducing communication delays.
\end_layout

\end_deeper
\begin_layout Columns

\series bold
Implementations decisions.
\end_layout

\begin_deeper
\begin_layout Itemize
Data can be replicated or cached.
\end_layout

\begin_layout Itemize
Access, caching, replication may be controlled via hardware or software.
\end_layout

\begin_layout Itemize
DSM may be controlled by OS, distributed memory manager, or language runtime.
\end_layout

\begin_layout Column
.36
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Memory consistency models
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Strict consistency/Linerisability.

\series default
 Use total order broadcast.
 Requires full replication.
\end_layout

\begin_deeper
\begin_layout Itemize
Ordered by a common global time.
\end_layout

\begin_layout Itemize
Each write is immediately visible to all processes.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Sequential consistency.

\series default
 Writes participate in total order broadcasts.
 Can use either local reads or local writes.
\end_layout

\begin_deeper
\begin_layout Itemize
Ordered by local time references.
\end_layout

\begin_layout Itemize
Result of execution is 
\emph on
possible in some sequential order
\emph default
.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Causal consistency.

\series default
 Use causal order broadcast.
\end_layout

\begin_deeper
\begin_layout Itemize
Only 
\emph on
causally related writes
\emph default
 need to be seen in order.
\end_layout

\begin_deeper
\begin_layout Itemize
A write operation causally precedes a read operation if the value returned
 by the read is the value written by the write.
\end_layout

\begin_layout Itemize
All causally relate writes must be seen in the same order by all processes.
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate

\series bold
Processor consistency/Pipelined RAM.

\series default
 Use FIFO broadcast.
\end_layout

\begin_deeper
\begin_layout Itemize
Write operation 
\emph on
issued by one processor
\emph default
 are seen by all other processors in the same order they were issued.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Slow memory consistency.
\end_layout

\begin_deeper
\begin_layout Itemize
Write operations issued by one processor 
\emph on
to the same memory
\emph default
 are seen in the same order they were issued.
\end_layout

\end_deeper
\end_deeper
\begin_layout Block

\series bold
Synchronisation based consistency models.

\series default
 Synchronisation variable used to control access to critical section as
 necessary.
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
Weak consistency.

\series default
 On synchronisation, all writes propagated to all processes, and all writes
 brought locally.
\end_layout

\begin_deeper
\begin_layout Enumerate
Access to sync vars are sequentially consistent.
\end_layout

\begin_layout Enumerate
No access to a sync var is allowed until all previous writes are completed.
\end_layout

\begin_layout Enumerate
No read/write is allowed to be performed until all accesses to sync vars
 have been performed.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Release consistency.

\series default
 Before an acquire, all write brought locally, and before release, all updates
 must be propagated to all other processes.
\end_layout

\begin_deeper
\begin_layout Enumerate
All 
\emph on
Acquire
\emph default
 operations must complete successfully before accessing a protected var.
\end_layout

\begin_layout Enumerate
All access to a protected var must complete before a 
\emph on
Release
\emph default
 can be performed.
\end_layout

\begin_layout Enumerate

\emph on
Acquire
\emph default
 and 
\emph on
Release
\emph default
 operations follow PRAM.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Entry consistency.

\series default
 Every shared variable must be associated with some synchronisation variable.
\end_layout

\end_deeper
\begin_layout Block

\end_layout

\begin_layout Column
.3
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Mutual exclusion
\end_layout

\end_inset


\end_layout

\begin_layout Block
Share one resource amongst many processes.
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
S: Mutual exclusion.

\series default
 At any time, only one process may execute CS.
\end_layout

\begin_layout Enumerate

\series bold
L: Progress.

\series default
 No process outside CS should block another from entering it.
\end_layout

\begin_layout Enumerate

\series bold
F: Bounded waiting.

\series default
 A process should not have to wait indefinitely to execute CS.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Lamport's bakery algorithm
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Each process given a unique identifier on entry.
\end_layout

\begin_layout Enumerate
Processes wait until their identifier is the smallest.
\end_layout

\end_deeper
\begin_layout Block
For 
\begin_inset Formula $n$
\end_inset

 processes:
\end_layout

\begin_deeper
\begin_layout Itemize
Space complexity—LB of 
\begin_inset Formula $n$
\end_inset

 registers.
\end_layout

\begin_layout Itemize
Time complexity of 
\begin_inset Formula $O(n)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Fast mutual exclusion
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Formula $O(1)$
\end_inset

 time complexity but does not guarantee fairness.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Wait-freedom
\end_layout

\end_inset


\end_layout

\begin_layout Block
Any process can complete an operation in a finite number of steps, even
 if other processes crash or experience unexpected delays.
\end_layout

\end_deeper
\begin_layout Columns
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{100cm}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
