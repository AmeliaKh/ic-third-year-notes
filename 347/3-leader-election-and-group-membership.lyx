#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamerposter
\begin_preamble
% You can select your theme here. Any beamer theme without a sidebar should work:
\usetheme{Rochester}
% Note, however, that only dedicated beamerposter themes also generate
% a suitable poster title automatically (we do this manually, see the notes
% in the document). 
% Dedicated beamerposter themes are available at 
% http://www-i6.informatik.rwth-aachen.de/~dreuw/latexbeamerposter.php

% Here you can set the options (note that the example content is made for the given setup. 
% With different orientation or poster size, the content probably won't fit on the poster):
\PassOptionsToPackage{%
   orientation=landscape, % possible: portrait, landscape
    size=a4,% possible: a0b, a0, a1, a2, a3, a4, custom (with width=<val>,height=<val>)
    scale=1.625,% scaling of fonts
    debug% give verbose warnings and error messages
}{beamerposter}

% This produces a grid which might be useful when positioning things
%\beamertemplategridbackground[0.5cm]
%\setbeamertemplate{background canvas}[vertical shading][bottom=gray,top=white]
\end_preamble
\options final
\use_default_options false
\begin_modules
multicol
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Leader Election and Group Membership
\end_layout

\begin_layout Frame

\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "80col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\begin_inset VSpace -1.25cm
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

% Output title
\end_layout

\begin_layout Plain Layout

{
\backslash
LARGE
\backslash
textcolor{white}{
\backslash
textbf{
\backslash
inserttitle}}}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace -0.75cm
\end_inset


\end_layout

\begin_layout Columns
\begin_inset Argument 1
status open

\begin_layout Plain Layout
t, totalwidth=
\begin_inset ERT
status open

\begin_layout Plain Layout

1
\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Column
.32
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bold
status open

\begin_layout Plain Layout

\size large
Leader election
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Columns
Often we can conserve resources by having just one process run an algorithm.
\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
S: Uniqueness.

\series default
 At most one process is elected the leader.
\end_layout

\begin_layout Enumerate

\series bold
L: Agreement.

\series default
 Eventually all processes should know a leader has been selected.
\end_layout

\end_deeper
\begin_layout Columns
Each process must have a unique identifier.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
LCR algorithm
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Each process in the ring sends its UID clockwise.
\end_layout

\begin_layout Enumerate
Compare received UID with our own:
\end_layout

\begin_deeper
\begin_layout Itemize
Smaller—discard it.
\end_layout

\begin_layout Itemize
Bigger—pass it on.
\end_layout

\begin_layout Itemize
Equal—declare ourself leader.
\end_layout

\end_deeper
\end_deeper
\begin_layout Block

\series bold
Complexity.
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 
\begin_inset Formula $O(n)$
\end_inset

.
\end_layout

\begin_layout Itemize
Messages: 
\begin_inset Formula $O(n)$
\end_inset

 best, 
\begin_inset Formula $O(n\log n)$
\end_inset

 avg, 
\begin_inset Formula $O(n^{2})$
\end_inset

 worst.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
HS algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Block
For 
\begin_inset Formula $\log n$
\end_inset

 rounds:
\end_layout

\begin_deeper
\begin_layout Enumerate
Send message with UID to 
\begin_inset Formula $2^{k}$
\end_inset

 neighbours on both sides.
\end_layout

\begin_layout Enumerate
On receiving UID:
\end_layout

\begin_deeper
\begin_layout Itemize
Smaller—discard it.
\end_layout

\begin_layout Itemize
Bigger—pass it on.
\end_layout

\begin_layout Itemize
Equal—declare ourself leader.
\end_layout

\end_deeper
\begin_layout Enumerate
Only continue to the next round if you get replies in both directions.
\end_layout

\end_deeper
\begin_layout Block

\series bold
Complexity.
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 
\begin_inset Formula $2+4+\dots+2^{\left\lceil \log n\right\rceil }+n=O(n)$
\end_inset

.
\end_layout

\begin_layout Itemize
Messages:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $4\times2^{k}\times\left\lfloor \frac{n}{2^{k-1}+1}\right\rfloor \leq8n$
\end_inset

 in each round.
\end_layout

\begin_layout Itemize
\begin_inset Formula $8n(1+\left\lceil \log n\right\rceil )=O(n\log n)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard

\series bold
Theorem.

\series default
 Comparison-based leader election for a ring of unknown size 
\begin_inset Formula $n$
\end_inset

 has a message complexity of 
\begin_inset Formula $\Omega\left(n\log n\right)$
\end_inset

.
\end_layout

\begin_layout Column
.32
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Non-comparison based algorithms
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate

\series bold
TimeSlice.

\series default
 Divide into phases 
\begin_inset Formula $1,2,3,\dots$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
In phase 
\begin_inset Formula $k$
\end_inset

 if process has UID 
\begin_inset Formula $k$
\end_inset

, sends it around ring.
\end_layout

\begin_layout Itemize
Time complexity is 
\begin_inset Formula $O\left(n\times UID_{min}\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Message complexity is 
\begin_inset Formula $O(n)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
VariableSpeeds.
\end_layout

\begin_deeper
\begin_layout Itemize
Each process sends its UID at a rate of 1 hop each 
\begin_inset Formula $2^{UID}$
\end_inset

 rounds.
\end_layout

\begin_layout Itemize
Messages with UIDs larger than the smallest seen so far are discarded.
\end_layout

\begin_layout Itemize
Time complexity is 
\begin_inset Formula $O\left(n\times2^{UID_{min}}\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
Message complexity is 
\begin_inset Formula $O(n)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
FloodMax algorithm
\end_layout

\end_inset


\end_layout

\begin_layout Block
For diameter rounds:
\end_layout

\begin_deeper
\begin_layout Enumerate
Broadcast maximum seen UID to all neighbours.
\end_layout

\end_deeper
\begin_layout Block

\series bold
Complexity.
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 
\begin_inset Formula $O(diameter)$
\end_inset

.
\end_layout

\begin_layout Itemize
Messages: 
\begin_inset Formula $O(diameter\times edges)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Block

\series bold
OptFloodMax.

\series default
 Only broadcast if 
\begin_inset Formula $UID_{max}$
\end_inset

 changes.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
SyncBFS
\end_layout

\end_inset


\end_layout

\begin_layout Block
Start with distinguished source process 
\begin_inset Formula $P_{0}$
\end_inset

, which broadcasts 
\emph on
search
\emph default
 message to all neighbours.
\end_layout

\begin_deeper
\begin_layout Itemize
On receiving its first search message, process marks itself, records its
 parent, and broadcasts its own 
\emph on
search
\emph default
 message in the next round.
\end_layout

\end_deeper
\begin_layout Block

\series bold
Complexity.
\end_layout

\begin_deeper
\begin_layout Itemize
Time: 
\begin_inset Formula $O(diameter)$
\end_inset

.
\end_layout

\begin_layout Itemize
Messages: 
\begin_inset Formula $\left|E\right|$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Block

\series bold
Convergecast.

\series default
 Each process sends response to its parent once it has received responses
 from every child.
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
Broadcasting.

\series default
 Initiate a 
\emph on
search
\emph default
 with message.
\end_layout

\begin_layout Itemize

\series bold
Global computation.

\series default
 Perform accumulation.
\end_layout

\begin_layout Itemize

\series bold
Leader election.

\series default
 Find 
\begin_inset Formula $UID_{max}$
\end_inset

.
\end_layout

\begin_layout Itemize

\series bold
Diameter calculation.

\series default
 Use convergecast to find diameter of each tree, then again to find maximum
 diameter.
\end_layout

\end_deeper
\begin_layout Block

\end_layout

\begin_layout Column
.32
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
linewidth
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Flex Bold
status open

\begin_layout Plain Layout

\size large
Group membership
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Columns
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
Failure notifications may reach different processes at different times.
 The aim is to coordinate failures.
\end_layout

\begin_layout Enumerate

\series bold
S: Monotonicity.

\series default
 All correct process install views in a sequence with strictly increasing
 view identifiers.
\end_layout

\begin_layout Enumerate

\series bold
S: Uniform agreement.

\series default
 Two processes installing views with the same identifier will have the view
 containing the same processes.
\end_layout

\begin_layout Enumerate

\series bold
L: Completeness.

\series default
 If a process creashes, every correct process will eventually install a
 view which does not have it as a member.
\end_layout

\begin_layout Enumerate

\series bold
S: Accuracy.

\series default
 If a process installs a view without a process, that process must have
 crashed.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
Consensus-based group memebership
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Invoke uniform consensus upon detecting a crash.
\end_layout

\begin_layout Enumerate
Install the new view only once consensus has been agreed.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Block
\begin_inset Argument 2
status collapsed

\begin_layout Plain Layout
View-synchronous communication
\end_layout

\end_inset


\end_layout

\begin_layout Block
Integrates reliable broadcast and group membership.
\end_layout

\end_deeper
\begin_layout Columns

\end_layout

\begin_layout Columns
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{100cm}
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
